0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/Cellar/node/4.1.1/bin/node',
1 verbose cli   '/usr/local/bin/npm',
1 verbose cli   'publish',
1 verbose cli   '.' ]
2 info using npm@2.14.4
3 info using node@v4.1.1
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/Users/mparang/Development/Cordova-Plugins/mfppush-development/mfppush-plugin',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /Users/mparang/.npm/ibm-mfp-push/1.0.0/package.tgz not in flight; packing
9 verbose tar pack [ '/Users/mparang/.npm/ibm-mfp-push/1.0.0/package.tgz',
9 verbose tar pack   '/Users/mparang/Development/Cordova-Plugins/mfppush-development/mfppush-plugin' ]
10 verbose tarball /Users/mparang/.npm/ibm-mfp-push/1.0.0/package.tgz
11 verbose folder /Users/mparang/Development/Cordova-Plugins/mfppush-development/mfppush-plugin
12 info prepublish ibm-mfp-push@1.0.0
13 verbose addLocalTarball adding from inside cache /Users/mparang/.npm/ibm-mfp-push/1.0.0/package.tgz
14 silly cache afterAdd ibm-mfp-push@1.0.0
15 verbose afterAdd /Users/mparang/.npm/ibm-mfp-push/1.0.0/package/package.json not in flight; writing
16 verbose afterAdd /Users/mparang/.npm/ibm-mfp-push/1.0.0/package/package.json written
17 silly publish { name: 'ibm-mfp-push',
17 silly publish   version: '1.0.0',
17 silly publish   description: 'Cordova Plugin for the IBM Bluemix Mobile Services Push SDK',
17 silly publish   cordova: { id: 'ibm-mfp-push', platforms: [ 'android', 'ios' ] },
17 silly publish   repository:
17 silly publish    { type: 'git',
17 silly publish      url: 'git+https://github.com/ibm-bluemix-mobile-services/bms-clientsdk-cordova-plugin-push.git' },
17 silly publish   keywords: [ 'ecosystem:cordova', 'cordova-android', 'cordova-ios' ],
17 silly publish   author: { name: 'IBM Bluemix Mobile Services' },
17 silly publish   license: 'Apache version 2.0',
17 silly publish   bugs: { url: 'https://github.com/ibm-bluemix-mobile-services/bms-clientsdk-cordova-plugin-push/issues' },
17 silly publish   homepage: 'https://github.com/ibm-bluemix-mobile-services/bms-clientsdk-cordova-plugin-push#readme',
17 silly publish   contributors:
17 silly publish    [ { name: 'Larry Nickerson', email: 'lnickers@us.ibm.com' },
17 silly publish      { name: 'Sergio Escoto', email: 'escotos@us.ibm.com' },
17 silly publish      { name: 'Matthew Parangot' } ],
17 silly publish   readme: '# IBM Bluemix Mobile Services - Push SDK Cordova\n\nCordova Plugin for the IBM Bluemix Mobile Services Push SDK\n\n## Contents\n- <a href="#installation">Installation</a>\n- <a href="#configuration">Configuration</a>\n    - <a href="#configure-ios">Configuring Your iOS Development Environment</a>\n    - <a href="#configure-android">Configuring Your Android Development Environment</a>\n- <a href="#usage">Usage</a>\n    - <a href="#usage">MFPPush</a>\n    - <a href="#sequence-diagrams">SDK Sequence Diagrams</a>\n- <a href="#examples">Examples</a> \n    - <a href="#ex-register">Registering for Push Notifications</a>\n    - <a href="#ex-retrieve">Retrieving Tags</a>\n    - <a href="#ex-subscribe">Subscribing and Unsubscribe to/from Tags</a>\n    - <a href="#ex-notification">Receiving a Notification</a>\n- <a href="#release-notes">Release Notes</a> \n\n<h2 id="installation">Installation</h2>\n\n### Adding the Cordova plugin\n\nFrom your Cordova application root directory, enter the following command to install the Cordova Push plugin.\n\n    $ cordova plugin install ibm-mfp-push\n\nFrom your app root folder, verify that the Cordova Core and Push plugin were installed successfully, using the following command.\n\n    $ cordova plugin list\n\n<h2 id="configuration">Configuration</h2>\n\n<h3 id="configure-ios">Configuring Your iOS Development Environment</h3>\n\nFollow the instructions here to configure your Xcode environment [https://github.com/ibm-bluemix-mobile-services/bms-clientsdk-cordova-plugin-core/tree/development#configure-ios](https://github.com/ibm-bluemix-mobile-services/bms-clientsdk-cordova-plugin-core/tree/development#configure-ios)\n\nGo to Build Settings > Search Paths > Framework Search Paths and verify that the following parameter was added:\n\n    "[your-project-name]/Plugins/ibm-mfp-push"\n\n#### Updating your client application to use the Push SDK\n\nAdd the following Objective-C code snippets to your application delegate class.\n\nAt the top of your AppDelegate.m:\n\n    #import "[your-project-name]-Swift.h"\n    \nIf your project name has spaces or hyphens, replace them with underscores in the import statement. Example:\n\n    // Project name is "Test Project" or "Test-Project"\n    #import "Test_Project-Swift.h"\n\nObjective-C:\n\n    // Register device token with Bluemix Push Notification Service\n    - (void)application:(UIApplication *)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)deviceToken {\n        \n        [[CDVMFPPush sharedInstance] didRegisterForRemoteNotifications:deviceToken];\n    }\n    \n    // Handle error when failed to register device token with APNs\n    - (void)application:(UIApplication*)application didFailToRegisterForRemoteNotificationsWithError:(NSError*)error {\n    \n        [[CDVMFPPush sharedInstance] didFailToRegisterForRemoteNotifications:error];\n    }\n    \n    // Handle receiving a remote notification\n    -(void)application:(UIApplication *)application didReceiveRemoteNotification:(NSDictionary *)userInfo fetchCompletionHandler:(void (^)(UIBackgroundFetchResult))completionHandler {\n        \n        [[CDVMFPPush sharedInstance] didReceiveRemoteNotification:userInfo];\n    }\n    \nSwift:\n    \n    // Register device token with Bluemix Push Notification Service\n    func application(application: UIApplication, didRegisterForRemoteNotificationsWithDeviceToken deviceToken: NSData) {\n        \n        CDVMFPPush.sharedInstance().didRegisterForRemoteNotifications(deviceToken)\n    }\n    \n    // Handle error when failed to register device token with APNs\n    func application(application: UIApplication, didFailToRegisterForRemoteNotificationsWithError error: NSErrorPointer) {\n        \n        CDVMFPPush.sharedInstance().didFailToRegisterForRemoteNotifications(error)\n    }\n    \n    // Handle receiving a remote notification\n    func application(application: UIApplication, didReceiveRemoteNotification userInfo: [NSObject : AnyObject], fetchCompletionHandler completionHandler: ) {\n        \n        CDVMFPPush.sharedInstance().didReceiveRemoteNotification(userInfo)\n    }\n\n<h3 id="configure-android">Configuring Your Android Development Environment</h3>\n\nFollow the instructions here to configure your Android environment [https://github.com/ibm-bluemix-mobile-services/bms-clientsdk-cordova-plugin-core/tree/development#configure-android](https://github.com/ibm-bluemix-mobile-services/bms-clientsdk-cordova-plugin-core/tree/development#configure-android)\n\n<h2 id="usage">Usage</h2>\n\nThe following MFPPush Javascript functions are available:\n\nJavascript Function | Description\n--- | ---\n`retrieveSubscriptions(success, failure)` | Retrieves the tags that are subscribed by the device.\n`retrieveAvailableTags(success, failure)` | Retrieves all the available tags for the backend mobile application.\n`subscribe(tag, success, failure)` | Subscribes to a particular backend mobile application tag.\n`unsubscribe(tag, success, failure)` | Unsubscribes from an backend mobile application tag.\n`registerDevice(settings, success, failure)` | Registers the device with the IMFPush Notification Server.\n`unregisterDevice(success, failure)` | Unregisters the device from the IMFPush Notification Server.\n`registerNotificationsCallback(callback)` | Registers a callback for when a notification arrives on the device.\n\n**Android (Native)**\nThe following native Android function is available.\n\n Android function | Description\n--- | ---\n`CDVMFPPush.setIgnoreIncomingNotifications(boolean ignore)` | By default, the Javascript API delegates Push Notification handling to the Push plugin. Use this method to override the plugin\'s default behavior -- ignore the notifications.\n\n<h3 id="sequence-diagrams">SDK Sequence Diagrams</h3>\n\n<img src="https://raw.githubusercontent.com/ibm-bluemix-mobile-services/bms-clientsdk-cordova-plugin-push/development/Sequence%20diagrams/Push%20Notifications%20SDK%20flows%20for%20hybrid%20iOS%20Apps.png">\n\n<img src="https://raw.githubusercontent.com/ibm-bluemix-mobile-services/bms-clientsdk-cordova-plugin-push/development/Sequence%20diagrams/Push%20Notifications%20SDK%20flows%20for%20hybrid%20Android%20apps.png">\n\n<h2 id="examples">Examples</h2>\n\n<h3 id="using-mfppush">Using MFPPush</h3>\n\n<h4 id="ex-register">Register for Push Notifications</h4>\n\n    var settings = {\n        ios: {\n            alert: true,\n            badge: true,\n            sound: true\n        }\n    }\n    \n    var success = function(message) { console.log("Success: " + message); };\n    var failure = function(message) { console.log("Error: " + message); };\n    \n    MFPPush.registerDevice(settings, success, failure);\n\nThe settings structure contains the settings that you want to enable for push notifications. You must use the defined structure and should only change the boolean value of each notification setting.\n\n\n**Note**:\nAndroid does NOT make use of the settings parameter, but you must supply an empty object, e.g:\n    \n    MFPPush.registerDevice({}, success, failure);\n\nTo unregister for push notifications simply call the following:\n\n    MFPPush.unregisterDevice(success, failure);\n    \n<h4 id="ex-retrieve">Retrieving Tags</h4>\n\nIn the following examples, the function parameter is a success callback that receives an array of tags. The second parameter is a callback function called on error.\n\nTo return an array of tags to which the user is currently subscribed, use the following Javascript function:\n\n    MFPPush.retrieveSubscriptions(function(tags) {\n        // alert(tags);\n    }, failure);\n    \nTo return an array of tags that are available to subscribe, use the following Javascript function:\n\n    MFPPush.retrieveAvailableTags(function(tags) {\n        // alert(tags);\n    }, failure);\n    \n<h4 id="ex-subscribe">Subscribe and Unsubscribe to/from Tags</h4>\n\n    var tag = "YourTag";\n\n    MFPPush.subscribe(tag, success, failure);\n    \n    MFPPush.unsubscribe(tag, success, failure);\n    \n<h4 id="ex-notification">Receiving a Notification</h4>\n\n    var handleNotification = function(notif) {\n        // notif is a JSON object containing your notification\n    }\n\n    MFPPush.registerNotificationsCallback(handleNotification);\n\nThe following table describes the properties of the notification object:\n\nProperty | Description\n--- | ---\n`message` | Push notification message.\n`payload` | JSON object containing notification payload.\n`sound` | The name of a sound file in the app bundle or in the Library/Sounds folder of the app’s data container. (iOS only).\n`badge` | The number to display as the badge of the app icon. If this property is absent, the badge is not changed. To remove the badge, set the value of this property to 0. (iOS only).\n`action-loc-key` | The string is used as a key to get a localized string in the current localization to use for the right button’s title instead of “View”. (iOS only).\n\nExample Notification:\n\n    // iOS\n    notif = {\n        message: "Message",\n        payload: {},\n        sound: null,\n        badge: null,\n        action-loc-key: null\n    }\n    \n    // Android\n    notif = {\n        message: "Message",\n        payload: {},\n        id: <id>,\n        url: <url>\n    }\n\n<h2 id="release-notes">Release Notes</h2>\n\nCopyright 2015 IBM Corp.\n\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\n',
17 silly publish   readmeFilename: 'README.md',
17 silly publish   gitHead: 'ceea1898e1af7cca4df8b221fd69843acf060a07',
17 silly publish   _id: 'ibm-mfp-push@1.0.0',
17 silly publish   scripts: {},
17 silly publish   _shasum: 'd34992e2885604da9b99cdaba9c73a262259c349',
17 silly publish   _from: '.' }
18 verbose getPublishConfig undefined
19 silly mapToRegistry name ibm-mfp-push
20 silly mapToRegistry using default registry
21 silly mapToRegistry registry https://registry.npmjs.org/
22 silly mapToRegistry uri https://registry.npmjs.org/ibm-mfp-push
23 verbose publish registryBase https://registry.npmjs.org/
24 silly publish uploading /Users/mparang/.npm/ibm-mfp-push/1.0.0/package.tgz
25 verbose request uri https://registry.npmjs.org/ibm-mfp-push
26 verbose request sending authorization for write operation
27 info attempt registry request try #1 at 12:32:17 PM
28 verbose request using bearer token for auth
29 verbose request id 5aaaf45d96b549dd
30 http request PUT https://registry.npmjs.org/ibm-mfp-push
31 http 403 https://registry.npmjs.org/ibm-mfp-push
32 verbose headers { 'content-type': 'application/json',
32 verbose headers   'cache-control': 'max-age=60',
32 verbose headers   'content-length': '95',
32 verbose headers   'accept-ranges': 'bytes',
32 verbose headers   date: 'Mon, 07 Dec 2015 18:32:19 GMT',
32 verbose headers   via: '1.1 varnish',
32 verbose headers   connection: 'keep-alive',
32 verbose headers   'x-served-by': 'cache-lax1430-LAX',
32 verbose headers   'x-cache': 'MISS',
32 verbose headers   'x-cache-hits': '0',
32 verbose headers   'x-timer': 'S1449513137.902095,VS0,VE1341' }
33 verbose request invalidating /Users/mparang/.npm/registry.npmjs.org/ibm-mfp-push on PUT
34 error publish Failed PUT 403
35 verbose stack Error: "You cannot publish over the previously published version 1.0.0." : ibm-mfp-push
35 verbose stack     at makeError (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:263:12)
35 verbose stack     at CachingRegistryClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:251:14)
35 verbose stack     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:171:14)
35 verbose stack     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:198:22)
35 verbose stack     at emitTwo (events.js:87:13)
35 verbose stack     at Request.emit (events.js:172:7)
35 verbose stack     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1073:14)
35 verbose stack     at emitOne (events.js:82:20)
35 verbose stack     at Request.emit (events.js:169:7)
35 verbose stack     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1019:12)
36 verbose statusCode 403
37 verbose pkgid ibm-mfp-push
38 verbose cwd /Users/mparang/Development/Cordova-Plugins/mfppush-development/mfppush-plugin
39 error Darwin 15.0.0
40 error argv "/usr/local/Cellar/node/4.1.1/bin/node" "/usr/local/bin/npm" "publish" "."
41 error node v4.1.1
42 error npm  v2.14.4
43 error code E403
44 error "You cannot publish over the previously published version 1.0.0." : ibm-mfp-push
45 error If you need help, you may report this error at:
45 error     <https://github.com/npm/npm/issues>
46 verbose exit [ 1, true ]
